1. Что такое "состояние гонки" и к чему оно может привести?

Это проблема, возникающая при одновременной работе некольких потоков над одним ресурсом.
Чтение одним потоком при одновременной записи другого вполне логично приводит к непредвиденным последствиям.

2. Как используют мьютексы и условные переменные?

Мьютексы: для безопасного модифицирования общих данных, позволяет запретить доступ к ресурку для остальных потоков.
Условные переменные: для остановки потока до получения уведомления от другого (но бывают и ложные пробуждения)

3. На что влияет выбор гранулярности блокировки?

Гранулярность определяет какие ресурсы блокируются при одной блокировке.
Соответственно плохой выбор гранулярности, когда не используются ресурсы, которые по идее могли бы использоваться,
уменьшит производительность. К примеру, контейнеры можно разбивать на участки и обрабатывать их, а не
блокировать весь контейнер в целом.

4. Когда возникает взаимоблокировка (deadlock) и как её предотвратитть?

Возникает в случаях, когда имеется поток, владеющий некоторым ресурсом, который нужен для второго потока для завершения,
а первый поток не может завершиться из-за того, что нужен ресурс второго потока.

Лучше предотвращать такие проблемы исключением случаев, когда потоки могут вот так выхватывать друг у друга ресурсы.
Можно решать их, блокируя сразу несколько мьютексов и, например, выставляя приоритеты.


5. Что есть атомарная операция и атомарный тип данных?

Это операции, которые работают независимо от других процессов, выполняют действие целиком. (Atom - неделимый)
Им соответствует атомарный тип данных, позволяющий делить доступ к ресурсу без дополнительной защиты (типа пьютексов).
