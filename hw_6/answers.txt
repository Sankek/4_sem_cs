1. Как организована иерархия классов потоков в библиотеке IOStream?

Самый базовый класс -- ios_base, не зависит от типа символов, определяет все базовые аттрибуты, методы классов,
определяет локали, флаги, используется в основном для разработчкиков стандартной библиотеки.
От него наследуется basic_ios<...> который уже определяет записимость от типа символов.
От него наследуются basic_istream<...> и basic_ostream<...>, специализирующиеся на чтении и записи.
От них наследуется basic_iostream<...>, специализация для char -- iostream, в хэдере <iostream> хранятся глобальные
объекты std::cin и std::cout
basic_sterambuf<...> осуществляет работу буффера, операции ввода и вывода.

2. Какие состояния потоков реализованы в базовом классе basic_ios?

1) goodbit - Всё ОК!
2) eofbit - Конец файла -> failbit
3) failbit  - Ошибка ввода-вывода, но не ломающая поток.
4) badbit - потеря данных, повреждение потока, совсем плохо

3. В чём разница между манипуляторами и флагами форматирования?

Манипуляторы как функции, служат для временного изменения потока, закидываются через <<, >>
Флаги скорее как объекты, можно сохранить их, поставить, глобальное состояние.

4. Из каких основных элементов состоят пути в файловой системе?

Корневой каталог (типа C:\ или /home )- Родительский каталог - Имя файла - Расширение

5. Зачем нужны форматы обмена данными, такие как JSON и XML?

Для передачи разнотипных данных между различными приложениями, возможно удаленными. Широко используется в вебе.

